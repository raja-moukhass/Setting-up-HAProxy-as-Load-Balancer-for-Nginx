    
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 300s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 10
    option redispatch
    option http-server-close
    option forwardfor
    maxconn 2000
    timeout connect 30s
    timeout client  15m
    timeout server  15m
    timeout http-request 5s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend haproxynode
    bind *:80
    mode http
   

  stick-table type ip size 1m expire 10s store http_req_rate(10s),conn_cur,conn_rate(10s) 
    tcp-request inspect-delay 10s
    tcp-request content track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 90 }
    http-request deny if { sc_conn_cur(0) gt 10 }
    http-request deny if { sc_conn_rate(0) gt 25 }
    default_backend backendnodes

frontend stats
    bind *:84
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

backend backendnodes
    balance leastconn
    option redispatch
    option abortonclose
    maxconn 40000
    timeout connect 5s
    timeout server 10s
    timeout client 30s
    server site1.com 10.11.100.48:8080 check                 #Nginx1
    server site2.com 10.11.100.48:8081 check                 #Nginx2

